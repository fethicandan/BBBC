function pop = bbbcf(pop,costs,maxval,minval,itx)

smoothf = 80; % Denotes after how many iterations, search space will be restricted to half.

if nargin == 0
   error('No parameter or missing parameter!')
end

%m = Size of population
%n = Number of parameters
[m, n] = size(pop);				
				
% The individual having minimum cost value is chosen. Big-Crunh phase.
[mincost, minpop] = min(costs);

%%centerpoint decision, method 2:
centerpoint = pop(minpop,:);
test= pop;
pop = zeros(m, n);
% New population is generated by using normal distrubution principle.
for pop_no=1:m-1             
   for parametre_no=1:n
       pop(pop_no,parametre_no)=centerpoint(parametre_no)+(maxval(parametre_no)-minval(parametre_no))*0.5*randn(1)/(1+itx/smoothf);   % Big Bang phase
       if pop(pop_no,parametre_no)<minval(parametre_no)       
           pop(pop_no,parametre_no)=minval(parametre_no);
       end
       if pop(pop_no,parametre_no)>maxval(parametre_no)
           pop(pop_no,parametre_no)=maxval(parametre_no);
       end
   end
end

% Last population member is forced to be always the best (elitism)
pop(m,:)= centerpoint;

